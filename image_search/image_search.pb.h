// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image_search.proto

#ifndef PROTOBUF_image_5fsearch_2eproto__INCLUDED
#define PROTOBUF_image_5fsearch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_image_5fsearch_2eproto();
void protobuf_AssignDesc_image_5fsearch_2eproto();
void protobuf_ShutdownFile_image_5fsearch_2eproto();

class ID;
class BinaryCode;
class HashIndex;
class ImageList;

// ===================================================================

class ID : public ::google::protobuf::Message {
 public:
  ID();
  virtual ~ID();

  ID(const ID& from);

  inline ID& operator=(const ID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ID& default_instance();

  void Swap(ID* other);

  // implements Message ----------------------------------------------

  ID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ID& from);
  void MergeFrom(const ID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ID)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_image_5fsearch_2eproto();
  friend void protobuf_AssignDesc_image_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_image_5fsearch_2eproto();

  void InitAsDefaultInstance();
  static ID* default_instance_;
};
// -------------------------------------------------------------------

class BinaryCode : public ::google::protobuf::Message {
 public:
  BinaryCode();
  virtual ~BinaryCode();

  BinaryCode(const BinaryCode& from);

  inline BinaryCode& operator=(const BinaryCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryCode& default_instance();

  void Swap(BinaryCode* other);

  // implements Message ----------------------------------------------

  BinaryCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryCode& from);
  void MergeFrom(const BinaryCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const void* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:BinaryCode)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_image_5fsearch_2eproto();
  friend void protobuf_AssignDesc_image_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_image_5fsearch_2eproto();

  void InitAsDefaultInstance();
  static BinaryCode* default_instance_;
};
// -------------------------------------------------------------------

class HashIndex : public ::google::protobuf::Message {
 public:
  HashIndex();
  virtual ~HashIndex();

  HashIndex(const HashIndex& from);

  inline HashIndex& operator=(const HashIndex& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HashIndex& default_instance();

  void Swap(HashIndex* other);

  // implements Message ----------------------------------------------

  HashIndex* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HashIndex& from);
  void MergeFrom(const HashIndex& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 table_id = 1;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::uint32 table_id() const;
  inline void set_table_id(::google::protobuf::uint32 value);

  // required uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HashIndex)
 private:
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 table_id_;
  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_image_5fsearch_2eproto();
  friend void protobuf_AssignDesc_image_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_image_5fsearch_2eproto();

  void InitAsDefaultInstance();
  static HashIndex* default_instance_;
};
// -------------------------------------------------------------------

class ImageList : public ::google::protobuf::Message {
 public:
  ImageList();
  virtual ~ImageList();

  ImageList(const ImageList& from);

  inline ImageList& operator=(const ImageList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageList& default_instance();

  void Swap(ImageList* other);

  // implements Message ----------------------------------------------

  ImageList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImageList& from);
  void MergeFrom(const ImageList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 images = 1;
  inline int images_size() const;
  inline void clear_images();
  static const int kImagesFieldNumber = 1;
  inline ::google::protobuf::uint32 images(int index) const;
  inline void set_images(int index, ::google::protobuf::uint32 value);
  inline void add_images(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      images() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_images();

  // @@protoc_insertion_point(class_scope:ImageList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > images_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_image_5fsearch_2eproto();
  friend void protobuf_AssignDesc_image_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_image_5fsearch_2eproto();

  void InitAsDefaultInstance();
  static ImageList* default_instance_;
};
// ===================================================================


// ===================================================================

// ID

// required uint32 id = 1;
inline bool ID::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ID::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ID::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ID::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ID::id() const {
  return id_;
}
inline void ID::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// BinaryCode

// required bytes code = 1;
inline bool BinaryCode::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryCode::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryCode::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& BinaryCode::code() const {
  return *code_;
}
inline void BinaryCode::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void BinaryCode::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void BinaryCode::set_code(const void* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BinaryCode::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* BinaryCode::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BinaryCode::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HashIndex

// required uint32 table_id = 1;
inline bool HashIndex::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HashIndex::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HashIndex::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HashIndex::clear_table_id() {
  table_id_ = 0u;
  clear_has_table_id();
}
inline ::google::protobuf::uint32 HashIndex::table_id() const {
  return table_id_;
}
inline void HashIndex::set_table_id(::google::protobuf::uint32 value) {
  set_has_table_id();
  table_id_ = value;
}

// required uint32 index = 2;
inline bool HashIndex::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HashIndex::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HashIndex::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HashIndex::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HashIndex::index() const {
  return index_;
}
inline void HashIndex::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// ImageList

// repeated uint32 images = 1;
inline int ImageList::images_size() const {
  return images_.size();
}
inline void ImageList::clear_images() {
  images_.Clear();
}
inline ::google::protobuf::uint32 ImageList::images(int index) const {
  return images_.Get(index);
}
inline void ImageList::set_images(int index, ::google::protobuf::uint32 value) {
  images_.Set(index, value);
}
inline void ImageList::add_images(::google::protobuf::uint32 value) {
  images_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ImageList::images() const {
  return images_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ImageList::mutable_images() {
  return &images_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_image_5fsearch_2eproto__INCLUDED
